from datetime import datetime
from obspy.core import read
from obspy.signal.trigger import classic_sta_lta

file_data = read("{0}", debug_headers=True)[0]
status = file_data.stats
start_time = float(status.starttime.strftime("%s.%f")) 

rate = file_data.stats.sampling_rate

cft = classic_sta_lta(file_data.data, int(5 * rate), int(10 * rate))

last_ctf, utc_offset = None, 8*3600
return_list = []
for index, ctt_item in enumerate(cft[3:], start=3):
    start_index = index - 3
    ft, st, tt = cft[start_index: index]
    if ft == 0 and st == 0 and tt != 0:
        return_list.append(float(datetime.fromtimestamp(start_time+ utc_offset + float(index)/1000).strftime('%Y%m%d%H%M%S.%f')))
# for index, ctt_item in enumerate(cft, start=1):
#     if (last_ctf is not None) and (last_ctf <= 0.05) and (ctt_item > 0.05):
#         return_list.append(float(datetime.fromtimestamp(start_time+ utc_offset + float(index)/1000).strftime('%Y%m%d%H%M%S.%f')))
#     last_ctf = ctt_item
print(return_list)